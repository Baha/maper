run_prog(hello,(main,0),[],X).
run_prog(cases,(main,1),[lit(int,1)],X).
run_prog(cases_primop,(main,1),[lit(int,3)],X).
run_prog(cases_primop_tuple,(main,1),[tuple([lit(int,2),lit(int,3)])],X).
run_prog(factorial,(fact,1),[lit(int,3)],X).
run_prog(odd,(odd,1),[lit(int,2)],X).
run_prog(sum,(main,2),[lit(int,2),lit(int,1)],X).
run_prog(sum_tuple,(main,2),[lit(int,1),lit(int,2)],X).
run_prog(sum_list,(main,1),[cons(lit(int,1),cons(lit(int,2),lit(list,nil)))],X).
run_prog(sign,(main,1),[lit(int,2)],X).
run_prog(weird_fun,(weird,1),[lit(int,1)],X).

% symbolic
run_prog(cases,(main,1),[lit(T,Z)],X).
run_prog(cases,(main,1),[Z],X).
run_prog(cases_primop,(main,1),[lit(T,Z)],X).
run_prog(odd,(odd,1),[lit(int,L)],X).
run_prog(sign,(main,1),[lit(int,L)],X).
run_prog(weird_fun,(weird,1),[Z],X).
run_prog(cases_primop_tuple,(main,1),[tuple([lit(int,A),lit(int,B)])],X).
run_prog(cases_primop_tuple,(main,1),[Z],X).
